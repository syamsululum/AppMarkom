@model AppMarkom.Web.ViewModels.employee.employeeViewModel

<form id="form-update">
    <div class="row">
        <div class="col-sm-6">
            <!-- text input -->
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.CreatedBy)
            @Html.HiddenFor(model => model.CreatedDate)
            <div class="form-group">
                <label>ID Number</label>
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>First Name</label>
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Last Name</label>
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label>Company Name</label>
                @Html.DropDownListFor(model => model.MCompany.Id, (IEnumerable<SelectListItem>)ViewBag.CompanyList, "-Select-", new { @class = "form-control", @type = "companyId" })
                @Html.ValidationMessageFor(model => model.MCompany, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Email</label>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="row">
        <div class="btn btn-group" style="text-align:right">
            <button class="btn btn-primary btn-sm" id="btnSubmit" type="submit">Submit</button>
            <button class="btn btn-warning btn-sm" id="btnClose" data-dismiss="modal">Close</button>
        </div>
    </div>
</form>

<script type="text/javascript" src="~/lib/plugins/jquery-validation/additional-methods.min.js"></script>
<script type="text/javascript" src="~/lib/plugins/jquery-validation/jquery.validate.min.js"></script>
<script type="text/javascript">
    $('#form-update').submit(function () {
        $.ajax({
            url: '@Url.Action("Update", "Employee")',
            type: 'put',
            data: $(this).serialize(),
            success: function (result) {
                alert("Data Updated");
                $('.modal').modal("hide");
                window.location.href = '@Url.Action("GetEmployees","Employee")'
            }
        });
        return false;
    });

    $(document).ready(function () {
        jQuery.validator.addMethod('selectcheck', function (value) {
            return (value != null);
        }, "year required");

        $('#form-update').validate({
            rules: {
                Email: {
                    required: true,
                    email: true,
                },
                FirstName: {
                    required: true,
                },
                companyId: {
                    selectcheck: true
                }

            },
            messages: {
                Email: {
                    required: "Please enter a email address",
                    email: "Please enter a vaild email address"
                },
                FirstName: {
                    required: "Please enter name",
                },
                companyId: {
                    selectcheck: "Please select an item!"
                }

            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
    });
</script>